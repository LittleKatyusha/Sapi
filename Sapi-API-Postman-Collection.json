{
	"info": {
		"_postman_id": "12345678-1234-5678-9012-123456789012",
		"name": "Sapi API Testing Collection",
		"description": "Complete API testing collection for Sapi Management System",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login successful\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data && jsonData.data.token) {",
									"        pm.collectionVariables.set(\"token\", jsonData.data.token);",
									"        console.log(\"Token saved:\", jsonData.data.token.substring(0, 50) + \"...\");",
									"        ",
									"        // Save user info",
									"        if (jsonData.data.user) {",
									"            pm.collectionVariables.set(\"user_id\", jsonData.data.user.id);",
									"            pm.collectionVariables.set(\"user_name\", jsonData.data.user.name);",
									"            pm.collectionVariables.set(\"user_email\", jsonData.data.user.email);",
									"        }",
									"    }",
									"});",
									"",
									"pm.test(\"Response has correct structure\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('status');",
									"    pm.expect(jsonData).to.have.property('data');",
									"    pm.expect(jsonData.data).to.have.property('token');",
									"    pm.expect(jsonData.data).to.have.property('user');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "API-KEY",
								"value": "{{api_key}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{login_email}}\",\n    \"password\": \"{{login_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Token Validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Token is valid\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"User data returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "API-KEY",
								"value": "{{api_key}}"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/user",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Master Data",
			"item": [
				{
					"name": "Suppliers",
					"item": [
						{
							"name": "Get All Suppliers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is successful\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response has data array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('data');",
											"    pm.expect(jsonData.data).to.be.an('array');",
											"});",
											"",
											"pm.test(\"Response time is acceptable\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "API-KEY",
										"value": "{{api_key}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/master/supplier/data?length=1000&start=0",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"master",
										"supplier",
										"data"
									],
									"query": [
										{
											"key": "length",
											"value": "1000"
										},
										{
											"key": "start",
											"value": "0"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Klasifikasi Hewan",
					"item": [
						{
							"name": "Get All Klasifikasi Hewan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is successful\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response has data array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('data');",
											"    pm.expect(jsonData.data).to.be.an('array');",
											"});",
											"",
											"pm.test(\"Each item has required fields\", function () {",
											"    var jsonData = pm.response.json();",
											"    if (jsonData.data.length > 0) {",
											"        var firstItem = jsonData.data[0];",
											"        pm.expect(firstItem).to.have.property('nama');",
											"        pm.expect(firstItem).to.have.property('kode');",
											"        pm.expect(firstItem).to.have.property('jenis_hewan');",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "API-KEY",
										"value": "{{api_key}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/master/klasifikasihewan/data?length=1000&start=0",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"master",
										"klasifikasihewan",
										"data"
									],
									"query": [
										{
											"key": "length",
											"value": "1000"
										},
										{
											"key": "start",
											"value": "0"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Offices",
					"item": [
						{
							"name": "Get All Offices",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is successful\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response has data array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('data');",
											"    pm.expect(jsonData.data).to.be.an('array');",
											"});",
											"",
											"pm.test(\"Each office has required fields\", function () {",
											"    var jsonData = pm.response.json();",
											"    if (jsonData.data.length > 0) {",
											"        var firstItem = jsonData.data[0];",
											"        pm.expect(firstItem).to.have.property('name');",
											"        pm.expect(firstItem).to.have.property('kode');",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "API-KEY",
										"value": "{{api_key}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/master/office/data?length=1000&start=0",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"master",
										"office",
										"data"
									],
									"query": [
										{
											"key": "length",
											"value": "1000"
										},
										{
											"key": "start",
											"value": "0"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Eartags",
					"item": [
						{
							"name": "Get All Eartags",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response is successful\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response has data array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('data');",
											"    pm.expect(jsonData.data).to.be.an('array');",
											"});",
											"",
											"pm.test(\"Each eartag has required fields\", function () {",
											"    var jsonData = pm.response.json();",
											"    if (jsonData.data.length > 0) {",
											"        var firstItem = jsonData.data[0];",
											"        pm.expect(firstItem).to.have.property('id');",
											"        pm.expect(firstItem).to.have.property('jenisHewan');",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "API-KEY",
										"value": "{{api_key}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/master/eartag/data?length=1000&start=0",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"master",
										"eartag",
										"data"
									],
									"query": [
										{
											"key": "length",
											"value": "1000"
										},
										{
											"key": "start",
											"value": "0"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "HO Pembelian",
			"item": [
				{
					"name": "Get Pembelian Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is successful\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has data array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data');",
									"    pm.expect(jsonData.data).to.be.an('array');",
									"});",
									"",
									"pm.test(\"DataTables format is correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('recordsTotal');",
									"    pm.expect(jsonData).to.have.property('recordsFiltered');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "API-KEY",
								"value": "{{api_key}}"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/ho/pembelian/data?length=100&start=0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"ho",
								"pembelian",
								"data"
							],
							"query": [
								{
									"key": "length",
									"value": "100"
								},
								{
									"key": "start",
									"value": "0"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Error Testing",
			"item": [
				{
					"name": "Test Without API Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Request fails without API key\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Error message is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('message');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{login_email}}\",\n    \"password\": \"{{login_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Without Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Request fails without token\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Unauthorized message is returned\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('message');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "API-KEY",
								"value": "{{api_key}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/master/supplier/data?length=10&start=0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"master",
								"supplier",
								"data"
							],
							"query": [
								{
									"key": "length",
									"value": "10"
								},
								{
									"key": "start",
									"value": "0"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"console.log('Request to:', pm.request.url);",
					"console.log('Headers:', pm.request.headers);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"console.log('Response status:', pm.response.status);",
					"console.log('Response time:', pm.response.responseTime + 'ms');"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://puput-api.ternasys.com/api",
			"type": "string"
		},
		{
			"key": "api_key",
			"value": "92b1d1ee96659e5b9630a51808b9372c",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "login_email",
			"value": "your-email@example.com",
			"type": "string"
		},
		{
			"key": "login_password",
			"value": "your-password",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_name",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_email",
			"value": "",
			"type": "string"
		}
	]
}